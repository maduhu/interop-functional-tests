<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="9" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="14509" started-at="2016-10-28T19:19:41Z" finished-at="2016-10-28T19:19:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="14509" started-at="2016-10-28T19:19:41Z" finished-at="2016-10-28T19:19:56Z">
      <class name="com.l1.interop.SPSPClientProxyFunctionalTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="setup" is-config="true" duration-ms="273" started-at="2016-10-28T15:19:41Z" finished-at="2016-10-28T15:19:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="beforeClass" is-config="true" duration-ms="1" started-at="2016-10-28T15:19:42Z" finished-at="2016-10-28T15:19:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="paymentExistingReceiver()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="paymentExistingReceiver" duration-ms="11215" started-at="2016-10-28T15:19:42Z" finished-at="2016-10-28T15:19:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentExistingReceiver -->
        <test-method status="FAIL" signature="queryExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="queryExistingReceiver" duration-ms="296" started-at="2016-10-28T15:19:53Z" data-provider="spspclientproxy_query_positive" finished-at="2016-10-28T15:19:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/bob]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path currencyCode doesn't match.
Expected: GBP
  Actual: USD
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path currencyCode doesn't match.
Expected: GBP
  Actual: USD

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:470)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:632)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:264)
	at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:247)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at com.l1.interop.SPSPClientProxyFunctionalTest.queryExistingReceiver(SPSPClientProxyFunctionalTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryExistingReceiver -->
        <test-method status="FAIL" signature="queryExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="queryExistingReceiver" duration-ms="414" started-at="2016-10-28T15:19:53Z" data-provider="spspclientproxy_query_positive" finished-at="2016-10-28T15:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/alice]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path currencyCode doesn't match.
Expected: GBP
  Actual: USD
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path currencyCode doesn't match.
Expected: GBP
  Actual: USD

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:470)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:632)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:264)
	at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:247)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at com.l1.interop.SPSPClientProxyFunctionalTest.queryExistingReceiver(SPSPClientProxyFunctionalTest.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryExistingReceiver -->
        <test-method status="PASS" signature="queryNonExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="queryNonExistingReceiver" duration-ms="263" started-at="2016-10-28T15:19:54Z" data-provider="spspclientproxy_query_negative" finished-at="2016-10-28T15:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Murthy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/murthy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryNonExistingReceiver -->
        <test-method status="PASS" signature="quoteSourceAmountForExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="quoteSourceAmountForExistingReceiver" duration-ms="605" started-at="2016-10-28T15:19:54Z" data-provider="spspclientproxy_query_positive" finished-at="2016-10-28T15:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/bob]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quoteSourceAmountForExistingReceiver -->
        <test-method status="PASS" signature="quoteSourceAmountForExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="quoteSourceAmountForExistingReceiver" duration-ms="594" started-at="2016-10-28T15:19:54Z" data-provider="spspclientproxy_query_positive" finished-at="2016-10-28T15:19:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/alice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quoteSourceAmountForExistingReceiver -->
        <test-method status="PASS" signature="quoteSourceAmountForNonExistingReceiver(java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="quoteSourceAmountForNonExistingReceiver" duration-ms="186" started-at="2016-10-28T15:19:55Z" data-provider="spspclientproxy_query_negative" finished-at="2016-10-28T15:19:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Murthy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://ec2-52-37-54-209.us-west-2.compute.amazonaws.com:3046/v1/receivers/murthy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quoteSourceAmountForNonExistingReceiver -->
        <test-method status="FAIL" signature="setUpExistingReceiver()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="setUpExistingReceiver" duration-ms="375" started-at="2016-10-28T15:19:55Z" finished-at="2016-10-28T15:19:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path address doesn't match.
Expected: a string containing (ignoring case) "alice"
  Actual: levelone.dfsp2.bob.2ccd54e5-5d53-405f-bd7e-0e81b902b466
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path address doesn't match.
Expected: a string containing (ignoring case) "alice"
  Actual: levelone.dfsp2.bob.2ccd54e5-5d53-405f-bd7e-0e81b902b466

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:470)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:632)
	at sun.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:264)
	at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:247)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at com.l1.interop.SPSPClientProxyFunctionalTest.setUpExistingReceiver(SPSPClientProxyFunctionalTest.java:250)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpExistingReceiver -->
        <test-method status="PASS" signature="setUpNonExistingReceiver()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="setUpNonExistingReceiver" duration-ms="265" started-at="2016-10-28T15:19:56Z" finished-at="2016-10-28T15:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpNonExistingReceiver -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@685cb137]" name="afterClass" is-config="true" duration-ms="1" started-at="2016-10-28T15:19:56Z" finished-at="2016-10-28T15:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.l1.interop.SPSPClientProxyFunctionalTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
