<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2716" started-at="2017-03-14T23:31:51Z" finished-at="2017-03-14T23:31:54Z">
    <groups>
      <group name="spsp_backend_service_all">
        <method signature="SPSPBackendServiceFunctionalTests.get_backend_services_receiver_positive()[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="get_backend_services_receiver_positive" class="com.l1.interop.SPSPBackendServiceFunctionalTests"/>
        <method signature="SPSPBackendServiceFunctionalTests.test_get_an_existing_invoice_positive(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="test_get_an_existing_invoice_positive" class="com.l1.interop.SPSPBackendServiceFunctionalTests"/>
      </group> <!-- spsp_backend_service_all -->
    </groups>
    <test name="Default test" duration-ms="2716" started-at="2017-03-14T23:31:51Z" finished-at="2017-03-14T23:31:54Z">
      <class name="com.l1.interop.SPSPBackendServiceFunctionalTests">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="setup" is-config="true" duration-ms="705" started-at="2017-03-14T17:31:51Z" finished-at="2017-03-14T17:31:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-03-14T17:31:52Z" finished-at="2017-03-14T17:31:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="get_backend_services_receiver_positive()[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="get_backend_services_receiver_positive" duration-ms="1517" started-at="2017-03-14T17:31:52Z" description="get_backend_services_receiver_positive" finished-at="2017-03-14T17:31:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: not (null or an empty string)
     but: was null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: not (null or an empty string)
     but: was null
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.l1.interop.SPSPBackendServiceFunctionalTests.get_backend_services_receiver_positive(SPSPBackendServiceFunctionalTests.java:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_backend_services_receiver_positive -->
        <test-method status="FAIL" signature="test_get_an_existing_invoice_positive(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="test_get_an_existing_invoice_positive" duration-ms="250" started-at="2017-03-14T17:31:54Z" data-provider="invoice_positive" finished-at="2017-03-14T17:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dfsp2.bob.dylan.account]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bob Dylan]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[USD]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10.4]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[https://www.example.com/gp/your-account/order-details?ie=UTF8&orderID=111-7777777-1111111]]>
              </value>
            </param>
          </params>
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:930)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:895)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:975)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:201)
	at io.restassured.path.json.JsonPath.getString(JsonPath.java:351)
	at com.l1.interop.SPSPBackendServiceFunctionalTests.test_get_an_existing_invoice_positive(SPSPBackendServiceFunctionalTests.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
Caused by: groovy.json.JsonException: A JSON payload should start with an openning curly brace '{' or an openning square bracket '['.
Instead, '"Not Found"' was found on line: 1, column: 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:114)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:893)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:928)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_get_an_existing_invoice_positive -->
        <test-method status="FAIL" signature="test_get_an_existing_invoice_positive(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="test_get_an_existing_invoice_positive" duration-ms="224" started-at="2017-03-14T17:31:54Z" data-provider="invoice_positive" finished-at="2017-03-14T17:31:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dfsp2.sam.jones.account]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bob Dylan]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[USD]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10.4]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[https://www.example.com/gp/your-account/order-details?ie=UTF8&orderID=111-7777777-1111111]]>
              </value>
            </param>
          </params>
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:930)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:895)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:975)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:201)
	at io.restassured.path.json.JsonPath.getString(JsonPath.java:351)
	at com.l1.interop.SPSPBackendServiceFunctionalTests.test_get_an_existing_invoice_positive(SPSPBackendServiceFunctionalTests.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
Caused by: groovy.json.JsonException: A JSON payload should start with an openning curly brace '{' or an openning square bracket '['.
Instead, '"Not Found"' was found on line: 1, column: 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:114)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:893)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:928)
	... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_get_an_existing_invoice_positive -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.l1.interop.SPSPBackendServiceFunctionalTests@564718df]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-03-14T17:31:54Z" finished-at="2017-03-14T17:31:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.l1.interop.SPSPBackendServiceFunctionalTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
