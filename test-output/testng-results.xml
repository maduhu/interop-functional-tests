<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="8" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="6447" started-at="2016-11-29T21:34:02Z" finished-at="2016-11-29T21:34:09Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="6447" started-at="2016-11-29T21:34:02Z" finished-at="2016-11-29T21:34:09Z">
      <class name="com.l1.interop.SPSPClientProxyFunctionalTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="setup" is-config="true" duration-ms="1331" started-at="2016-11-29T14:34:02Z" finished-at="2016-11-29T14:34:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="beforeClass" is-config="true" duration-ms="2" started-at="2016-11-29T14:34:04Z" finished-at="2016-11-29T14:34:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="invoice_GetInvoiceDetails_ForInvalidInvoice_ShouldReceive404Response(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_GetInvoiceDetails_ForInvalidInvoice_ShouldReceive404Response" duration-ms="1598" started-at="2016-11-29T14:34:04Z" data-provider="invoice_GET_negative" finished-at="2016-11-29T14:34:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8082/spsp/client/v1/invoice?invoiceUrl=http://brian.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dfsp2.bob.dylan.account]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bob Dylan]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[USD]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[999.99]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[https://www.example.com/gp/your-account/order-details?ie=UTF8&orderID=111-7777777-1111111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_GetInvoiceDetails_ForInvalidInvoice_ShouldReceive404Response -->
        <test-method status="PASS" signature="invoice_Get_Ensure404WithInvalidURL_ShouldReceive404Response(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_Get_Ensure404WithInvalidURL_ShouldReceive404Response" duration-ms="214" started-at="2016-11-29T14:34:05Z" data-provider="invoice_GET_negative" finished-at="2016-11-29T14:34:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:8082/spsp/client/v1/invoice?invoiceUrl=http://brian.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dfsp2.bob.dylan.account]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bob Dylan]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[USD]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[$]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[999.99]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[unpaid]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[https://www.example.com/gp/your-account/order-details?ie=UTF8&orderID=111-7777777-1111111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_Get_Ensure404WithInvalidURL_ShouldReceive404Response -->
        <test-method status="PASS" signature="invoice_Get_withInvalidUri_ShoudlGet404()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_Get_withInvalidUri_ShoudlGet404" duration-ms="257" started-at="2016-11-29T14:34:06Z" finished-at="2016-11-29T14:34:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_Get_withInvalidUri_ShoudlGet404 -->
        <test-method status="FAIL" signature="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse" duration-ms="870" started-at="2016-11-29T14:34:06Z" data-provider="invoice_create_positive" finished-at="2016-11-29T14:34:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://sampleurl1.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sample_invoice_id1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://submissionUrl.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sample_senderIdentifier1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sample memo1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.l1.interop.SPSPClientProxyFunctionalTest.invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(SPSPClientProxyFunctionalTest.java:977)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse -->
        <test-method status="FAIL" signature="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse" duration-ms="1017" started-at="2016-11-29T14:34:07Z" data-provider="invoice_create_positive" finished-at="2016-11-29T14:34:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://sampleurl2.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sample_invoice_id2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://submissionUrl.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sample_senderIdentifier2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sample memo2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.l1.interop.SPSPClientProxyFunctionalTest.invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(SPSPClientProxyFunctionalTest.java:977)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse -->
        <test-method status="FAIL" signature="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse" duration-ms="701" started-at="2016-11-29T14:34:08Z" data-provider="invoice_create_positive" finished-at="2016-11-29T14:34:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://sampleurl3.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sample_invoice_id3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[http://submissionUrl.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[sample_senderIdentifier3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[sample memo3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: not a string containing "Not Found"
     but: was "\"Not Found\""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at com.l1.interop.SPSPClientProxyFunctionalTest.invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse(SPSPClientProxyFunctionalTest.java:977)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_POST_ForValidInvoice_ShouldReceiveInvoiceDetailValidResponse -->
        <test-method status="PASS" signature="invoice_POST_testingFor404ResourceNotFound()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_POST_testingFor404ResourceNotFound" duration-ms="210" started-at="2016-11-29T14:34:08Z" finished-at="2016-11-29T14:34:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_POST_testingFor404ResourceNotFound -->
        <test-method status="PASS" signature="invoice_POST_testingFor415UnsupportedMediaType()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="invoice_POST_testingFor415UnsupportedMediaType" duration-ms="212" started-at="2016-11-29T14:34:09Z" finished-at="2016-11-29T14:34:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoice_POST_testingFor415UnsupportedMediaType -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.l1.interop.SPSPClientProxyFunctionalTest@7d68ef40]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-11-29T14:34:09Z" finished-at="2016-11-29T14:34:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.l1.interop.SPSPClientProxyFunctionalTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
